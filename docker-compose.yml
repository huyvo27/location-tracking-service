services:
  db:
    image: postgres:15
    container_name: postgres-server
    environment:
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi123
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis1:
    image: redis:7
    container_name: redis1
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "locaTracer123"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "locaTracer123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis2:
    image: redis:7
    container_name: redis2
    ports:
      - "6380:6379"
    command: ["redis-server", "--requirepass", "locaTracer123"]
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "-a", "locaTracer123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  alembic:
    image: python:3.12.11-slim
    container_name: alembic
    working_dir: /app
    volumes:
      - ./alembic:/app
    environment:
      DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi123@db:5432/app_db
    depends_on:
      - db
    entrypoint: ["sh", "-c", "while ! nc -z db 5432; do sleep 1; done; alembic upgrade head"]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: location_tracker_api
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi123@db/app_db
      REDIS_URLs: redis://:locaTracer123@redis1:6379/0,redis://:locaTracer123@redis2:6379/0
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis1
      - redis2
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
